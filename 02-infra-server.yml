---
- name: Configure Fedora UKI infra server
  hosts: infra_server
  become: true

  tasks:
    - name: Install required packages
      ansible.builtin.dnf:
        name:
          - htop
          - iotop
          - strace
          - lsof
          - mc
          - firewalld
          - nfs-utils
        state: present
        update_cache: true

    - name: Ensure Firewalld is running and enabled
      ansible.builtin.systemd:
        name: firewalld
        enabled: yes
        state: started

    - name: Check existing Firewalld zones
      ansible.builtin.command: "firewall-cmd --get-zones"
      register: firewalld_existing_zones
      changed_when: false

    - name: Create Firewalld zones if missing
      ansible.builtin.firewalld:
        zone: "{{ item }}"
        permanent: yes
        state: present
      loop:
        - servers
        - 10G
        - infra
        - containers
      when: "item not in firewalld_existing_zones.stdout"

    - name: Reload Firewalld to apply new zones
      ansible.builtin.command:
        cmd: "firewall-cmd --reload"
      changed_when: false 
       
    - name: Bind interfaces to Firewalld zones
      ansible.builtin.firewalld:
        zone: "{{ item.zone }}"
        interface: "{{ item.interface }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop:
        - { zone: "servers", interface: "eth0" }
        - { zone: "10G", interface: "eth1" }
        - { zone: "nfs", interface: "eth3" }
        - { zone: "containers", interface: "eth2" }

    - name: Allow required services in Firewalld zones
      ansible.builtin.firewalld:
        zone: "{{ item.zone }}"
        service: "{{ item.service }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop:
        - { zone: "servers", service: "ssh" }
        - { zone: "servers", service: "dns" }
        - { zone: "servers", service: "dhcp" }
        - { zone: "servers", service: "ntp" }
        - { zone: "10G", service: "dns" }
        - { zone: "10G", service: "dhcp" }
        - { zone: "10G", service: "ntp" }
        - { zone: "nfs", service: "nfs" }
        - { zone: "containers", service: "http" }
        - { zone: "containers", service: "https" }

    - name: Open required ports in Firewalld zones
      ansible.builtin.firewalld:
        zone: "{{ item.zone }}"
        port: "{{ item.port }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop:
        - { zone: "containers", port: "8080/tcp" }
        - { zone: "containers", port: "8081/tcp" }

    - name: Enable IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes

    - name: Redirect port 80 to 8080 
      ansible.posix.firewalld:
        zone: containers
        forward_port:
          port: 80
          protocol: tcp
          to_port: 8080
          to_addr: ""
        permanent: yes
        immediate: yes
        state: enabled

    - name: Redirect port 443 to 8443 
      ansible.posix.firewalld:
        zone: containers
        forward_port:
          port: 443
          protocol: tcp
          to_port: 8443
          to_addr: ""
        permanent: yes
        immediate: yes
        state: enabled

    - name: Redirect port 53 to 8053 
      ansible.posix.firewalld:
        zone: containers
        forward_port:
          port: 53
          protocol: tcp
          to_port: 8053
          to_addr: ""
        permanent: yes
        immediate: yes
        state: enabled

    - name: Redirect port 67 to 8067
      ansible.posix.firewalld:
        zone: containers
        forward_port:
          port: 67
          protocol: tcp
          to_port: 8067
          to_addr: ""
        permanent: yes
        immediate: yes
        state: enabled
      
    - name: Reload Firewalld to apply changes
      ansible.builtin.command:
        cmd: "firewall-cmd --reload"

    - name: Create podman mount directory
      ansible.builtin.file:
        path: /home/michael/podman
        state: directory
        owner: michael
        group: michael
        mode: '0755'

    - name: Mount NFS share for Podman
      ansible.posix.mount:
        path: /home/michael/podman
        src: 10.14.112.20:/srv/nfs/infra-server
        fstype: nfs
        opts: noatime,_netdev,vers=4.2,context=system_u:object_r:container_file_t:s0
        state: mounted

    - name: Ensure NFS mount is persistent in /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: "10.14.112.20:/srv/nfs/infra-server /home/michael/podman nfs noatime,_netdev,vers=4.2,context=system_u:object_r:container_file_t:s0 0 0"
        state: present

    - name: Ensure michael owns the mounted NFS directory
      ansible.builtin.command: chown -R michael:michael /home/michael/podman
      args:
        warn: false

    - name: Apply SELinux context for Podman data dir
      community.general.sefcontext:
        target: '/home/michael/podman(/.*)?'
        setype: container_file_t
        state: present

    - name: Restore SELinux context on /home/michael/podman
      ansible.builtin.command: "restorecon -Rv /home/michael/podman"
      changed_when: true
