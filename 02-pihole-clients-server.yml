---
- name: Install Pihole Clients Server
  hosts: all
  become: yes
  tasks:

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add Docker apt repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker CE
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Install required packages (Firewalld and NFS Client)
      ansible.builtin.apt:
        name:
          - firewalld
          - nfs-common
        state: present
        update_cache: yes

    - name: Ensure Firewalld is running and enabled
      ansible.builtin.systemd:
        name: firewalld
        enabled: yes
        state: started

    - name: Check existing Firewalld zones
      ansible.builtin.command: "firewall-cmd --get-zones"
      register: firewalld_existing_zones
      changed_when: false

    - name: Create Firewalld zones if missing
      ansible.builtin.firewalld:
        zone: "{{ item }}"
        permanent: yes
        state: present
      loop:
        - servers
        - 10G
        - containers

    - name: Reload Firewalld to apply new zones
      ansible.builtin.command:
        cmd: "firewall-cmd --reload"
      changed_when: false 

    - name: Bind interfaces to Firewalld zones
      ansible.builtin.firewalld:
        zone: "{{ item.zone }}"
        interface: "{{ item.interface }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop:
        - { zone: "servers", interface: "eth0" }
        - { zone: "10G", interface: "eth1" }
        - { zone: "containers", interface: "eth2" }

    - name: Allow required services in Firewalld zones
      ansible.builtin.firewalld:
        zone: "{{ item.zone }}"
        service: "{{ item.service }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop:
        - { zone: "servers", service: "ssh" }
        - { zone: "10G", service: "dns" }
        - { zone: "10G", service: "dhcp" }
        - { zone: "10G", service: "ntp" }
        - { zone: "containers", service: "http" }
        - { zone: "containers", service: "https" }
    
    - name: Reload Firewalld to apply changes
      ansible.builtin.command:
        cmd: "firewall-cmd --reload"
    
    - name: Ensure mount point for NFS share exists
      file:
        path: /srv/pihole-clients
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Mount NFS share
      mount:
        src: "10.10.112.20:/srv/nfs/pihole-clients"
        path: /mnt/pihole-clients
        fstype: nfs
        opts: nofail,_netdev,auto,nfsvers=4.1,rsize=1048576,wsize=1048576,timeo=900,retrans=3
        state: mounted

    - name: Make NFS mount persistent in fstab
      mount:
        src: "10.10.112.20:/srv/nfs/pihole-clients"
        path: /mnt/pihole-clients
        fstype: nfs
        opts: nofail,_netdev,auto,nfsvers=4.1,rsize=1048576,wsize=1048576,timeo=900,retrans=3
        state: present
    
    - name: Ensure user 'michael' is part of 'docker' group
      user:
        name: michael
        groups: docker
        append: yes

    - name: Create /home/michael/docker directory with proper ownership
      file:
        path: /home/michael/docker
        state: directory
        owner: michael
        group: michael
        mode: '0755'