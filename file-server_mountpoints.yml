---
- name: Configure file server mount points
  hosts: file_server
  become: true  # Run with sudo privileges

  tasks:
    - name: Create required directories (excluding Btrfs-managed paths)
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop:
        - /srv/nvme  # Base for NVMe subvolumes
        - /srv/hdd   # Base for HDD subvolumes
        - /srv/nfs   # Base for NFS bind mounts
        - /srv/nfs/backup
        - /srv/nfs/container-server
        - /srv/nfs/infra-server
        - /srv/nfs/nextcloud-server
        - /srv/nfs/srv_pbs_important
        - /srv/nfs/pbs_test

    - name: Mount Btrfs subvolumes (NVMe Partition)
      ansible.builtin.mount:
        path: "{{ item.path }}"
        src: "UUID=19583b5d-8c79-4f16-b902-153124679f5e"
        fstype: btrfs
        opts: "{{ item.opts }}"
        state: mounted
      loop:
        - { path: "/srv/nvme", opts: "subvol=@srv_nvme,noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd" }
        - { path: "/srv/nvme/backup", opts: "subvol=@srv_nvme_backup,noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd" }
        - { path: "/srv/nvme/container-server", opts: "subvol=@srv_nvme_container-server,noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd" }
        - { path: "/srv/nvme/infra-server", opts: "subvol=@srv_nvme_infra-server,noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd" }
        - { path: "/srv/nvme/nextcloud-server", opts: "subvol=@srv_nvme_nextcloud-server,noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd" }

    - name: Mount Btrfs subvolumes (HDD Partition)
      ansible.builtin.mount:
        path: "{{ item.path }}"
        src: "UUID=c3c23dbc-7f0a-427c-9a3f-2462a3dc1e5c"
        fstype: btrfs
        opts: "{{ item.opts }}"
        state: mounted
      loop:
        - { path: "/srv/hdd", opts: "subvol=@srv_hdd,noatime,nodev,nosuid,noexec,compress-force=zstd:6,autodefrag,space_cache=v2,nossd" }
        - { path: "/srv/hdd/backup", opts: "subvol=@srv_hdd_backup,noatime,nodev,nosuid,noexec,compress-force=zstd:6,autodefrag,space_cache=v2,nossd" }
        - { path: "/srv/hdd/pbs_important", opts: "subvol=@srv_pbs_important,noatime,nodev,nosuid,noexec,compress-force=zstd:6,autodefrag,space_cache=v2,nossd" }
        - { path: "/srv/hdd/pbs_test", opts: "subvol=@srv_pbs_test,noatime,nodev,nosuid,noexec,compress-force=zstd:6,autodefrag,space_cache=v2,nossd" }

    - name: Mount Btrfs root partitions
      ansible.builtin.mount:
        path: "{{ item.path }}"
        src: "UUID={{ item.uuid }}"
        fstype: btrfs
        opts: "defaults"
        state: mounted
      loop:
        - { path: "/srv/nvme/btrfsroot", uuid: "19583b5d-8c79-4f16-b902-153124679f5e", opts: "noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd" }
        - { path: "/srv/hdd/btrfsroot", uuid: "c3c23dbc-7f0a-427c-9a3f-2462a3dc1e5c", opts: "noatime,nodev,nosuid,noexec,compress-force=zstd:6,autodefrag,space_cache=v2,nossd" }
        
    - name: Bind mount directories
      ansible.builtin.mount:
        path: "{{ item.dest }}"
        src: "{{ item.src }}"
        fstype: none
        opts: "bind"
        state: mounted
      loop:
        - { src: "/srv/nvme/backup", dest: "/srv/nfs/backup" }
        - { src: "/srv/nvme/container-server", dest: "/srv/nfs/container-server" }
        - { src: "/srv/nvme/infra-server", dest: "/srv/nfs/infra-server" }
        - { src: "/srv/nvme/nextcloud-server", dest: "/srv/nfs/nextcloud-server" }
        - { src: "/srv/hdd/pbs_important", dest: "/srv/nfs/pbs_important"}
        - { src: "/srv/hdd/pbs_test", dest: "/srv/nfs/pbs_test"}

    - name: Ensure all mounts are persistent in /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: "{{ item }}"
        state: present
      loop:
        - "UUID=19583b5d-8c79-4f16-b902-153124679f5e /srv/nvme btrfs subvol=@srv_nvme,noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd 0 0"
        - "UUID=19583b5d-8c79-4f16-b902-153124679f5e /srv/nvme/backup btrfs subvol=@srv_nvme_backup,noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd 0 0"
        - "UUID=19583b5d-8c79-4f16-b902-153124679f5e /srv/nvme/container-server btrfs subvol=@srv_nvme_container-server,noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd 0 0"
        - "UUID=19583b5d-8c79-4f16-b902-153124679f5e /srv/nvme/infra-server btrfs subvol=@srv_nvme_infra-server,noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd 0 0"
        - "UUID=19583b5d-8c79-4f16-b902-153124679f5e /srv/nvme/nextcloud-server btrfs subvol=@srv_nvme_nextcloud-server,noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd 0 0"
        - "UUID=c3c23dbc-7f0a-427c-9a3f-2462a3dc1e5c /srv/hdd btrfs subvol=@srv_hdd,noatime,nodev,nosuid,noexec,compress-force=zstd:6,autodefrag,space_cache=v2,nossd 0 0"
        - "UUID=c3c23dbc-7f0a-427c-9a3f-2462a3dc1e5c /srv/hdd/backup btrfs subvol=@srv_hdd_backup,noatime,nodev,nosuid,noexec,compress-force=zstd:6,autodefrag,space_cache=v2,nossd 0 0"
        - "UUID=c3c23dbc-7f0a-427c-9a3f-2462a3dc1e5c /srv/hdd/pbs_important btrfs subvol=@srv_pbs_important,noatime,nodev,nosuid,noexec,compress-force=zstd:6,autodefrag,space_cache=v2,nossd 0 0"
        - "UUID=c3c23dbc-7f0a-427c-9a3f-2462a3dc1e5c /srv/hdd/pbs_test btrfs subvol=@srv_pbs_test,noatime,nodev,nosuid,noexec,compress-force=zstd:6,autodefrag,space_cache=v2,nossd 0 0"
        - "UUID=19583b5d-8c79-4f16-b902-153124679f5e /srv/nvme/btrfsroot btrfs noatime,nodev,nosuid,noexec,compress=zstd,autodefrag,space_cache=v2,ssd 0 0"
        - "UUID=c3c23dbc-7f0a-427c-9a3f-2462a3dc1e5c /srv/hdd/btrfsroot btrfs noatime,nodev,nosuid,noexec,compress-force=zstd:6,autodefrag,space_cache=v2,nossd 0 0"
        - "/srv/nvme/backup /srv/nfs/backup none bind 0 0"
        - "/srv/nvme/container-server /srv/nfs/container-server none bind 0 0"
        - "/srv/nvme/infra-server /srv/nfs/infra-server none bind 0 0"
        - "/srv/nvme/nextcloud-server /srv/nfs/nextcloud-server none bind 0 0"
        - "/srv/hdd/pbs_important /srv/nfs/pbs_important none bind 0 0"
        - "/srv/hdd/pbs_test /srv/nfs/pbs_test none bind 0 0"
       
    - name: Install required packages (NFS & Firewalld)
      ansible.builtin.apt:
        name:
          - nfs-kernel-server
          - firewalld
        state: present
        update_cache: yes

    - name: Ensure Firewalld is running and enabled
      ansible.builtin.systemd:
        name: firewalld
        enabled: yes
        state: started

    - name: Check existing Firewalld zones
      ansible.builtin.command: "firewall-cmd --get-zones"
      register: firewalld_existing_zones
      changed_when: false

    - name: Create Firewalld zones if missing
      ansible.builtin.firewalld:
        zone: "{{ item }}"
        permanent: yes
        state: present
      loop:
        - servers
        - 10G
        - pve-host
        - nextcloud
        - infra
      when: "item not in firewalld_existing_zones.stdout"

    - name: Bind interfaces to Firewalld zones
      ansible.builtin.firewalld:
        zone: "{{ item.zone }}"
        interface: "{{ item.interface }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop:
        - { zone: "servers", interface: "eth0" }
        - { zone: "10G", interface: "eth1" }
        - { zone: "pve-host", interface: "eth2" }
        - { zone: "nextcloud", interface: "eth3" }
        - { zone: "infra", interface: "eth4" }

    - name: Allow required services in Firewalld zones
      ansible.builtin.firewalld:
        zone: "{{ item.zone }}"
        service: "{{ item.service }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop:
        - { zone: "servers", service: "ssh" }
        - { zone: "servers", service: "nfs" }
        - { zone: "10G", service: "nfs" }
        - { zone: "pve-host", service: "nfs" }
        - { zone: "nextcloud", service: "nfs" }
        - { zone: "infra", service: "nfs" }

    - name: Reload Firewalld to apply changes
      ansible.builtin.command:
        cmd: "firewall-cmd --reload"
    
    - name: Ensure NFS service is running and enabled
      ansible.builtin.systemd:
        name: nfs-server
        enabled: yes
        state: started

    - name: Define NFS exports
      ansible.builtin.blockinfile:
        path: /etc/exports
        block: |
          /srv/nfs/backup       10.10.112.0/24(rw,sync,no_subtree_check,no_root_squash)
          /srv/nfs/infra-server 10.14.112.40(rw,sync,no_subtree_check,no_root_squash)
          /srv/nfs/nextcloud-server 10.13.112.41(rw,sync,no_subtree_check,no_root_squash)
          /srv/nfs/pbs_important 10.14.112.40(rw,sync,no_subtree_check,no_root_squash)
          /srv/nfs/pbs_test 10.14.112.40(rw,sync,no_subtree_check,no_root_squash)
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
      notify:
        - Restart NFS if needed

    - name: Export NFS shares
      ansible.builtin.command: exportfs -ra
      changed_when: false

  handlers:
    - name: Restart NFS if needed
      ansible.builtin.systemd:
        name: nfs-server
        state: restarted
      when: "'/etc/exports' is changed"

    


